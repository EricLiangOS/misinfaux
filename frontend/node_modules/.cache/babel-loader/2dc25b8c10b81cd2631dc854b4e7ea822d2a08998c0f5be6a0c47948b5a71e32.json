{"ast":null,"code":"var _jsxFileName = \"/Users/ehliang/Desktop/Projects/misinfaux/misinfaux/frontend/src/components/SummaryModal.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SummaryModal = ({\n  isOpen,\n  onClose,\n  results\n}) => {\n  var _results$problematicE, _results$problematicE2, _results$problematicE3, _results$problematicE4;\n  if (!isOpen || !results) return null;\n  const {\n    textMetrics,\n    entropyScore,\n    klDivergence\n  } = results;\n  const overusedWordsCount = ((_results$problematicE = results.problematicElements) === null || _results$problematicE === void 0 ? void 0 : (_results$problematicE2 = _results$problematicE.overusedWords) === null || _results$problematicE2 === void 0 ? void 0 : _results$problematicE2.length) || 0;\n  const suspiciousWordsCount = ((_results$problematicE3 = results.problematicElements) === null || _results$problematicE3 === void 0 ? void 0 : (_results$problematicE4 = _results$problematicE3.suspiciousWords) === null || _results$problematicE4 === void 0 ? void 0 : _results$problematicE4.length) || 0;\n\n  // Calculate sentence length score as in the model\n  const avgSentenceLength = textMetrics.avgSentenceLength;\n  const sentenceLengthScore = Math.abs(avgSentenceLength - 17.5) / 10;\n\n  // Calculate the logistic regression formula result\n  // For P(misleading) = 1/(1 + e^-(intercept + β₁*x₁ + β₂*x₂ + ... + βₙxₙ))\n  const intercept = 1.217970;\n  const weights = {\n    entropy: 0.800971,\n    // Changed from -1.0\n    klDivergence: -1.847155,\n    // Changed from 2.0\n    overusedWords: -1.318058,\n    // Changed from 3.0\n    suspiciousWords: -3.026311,\n    // Changed from 1.5\n    sentenceLength: 2.889868 // Changed from -0.5\n  };\n  const logitScore = intercept + weights.entropy * entropyScore + weights.klDivergence * klDivergence + weights.overusedWords * overusedWordsCount / 10 + weights.suspiciousWords * suspiciousWordsCount + weights.sentenceLength * sentenceLengthScore;\n\n  // Calculate probability: P = 1/(1 + e^-z)\n  const reliabilityProbability = 1 / (1 + Math.exp(-logitScore));\n  const probabilityPercentage = (reliabilityProbability * 100).toFixed(1);\n\n  // Calculate confidence based on absolute value of z-score\n  const absLogit = Math.abs(logitScore);\n  const confidence = Math.min(0.99, 0.5 + 0.1 * absLogit);\n  const confidencePercentage = (confidence * 100).toFixed(1);\n\n  // Determine classification: reliable when z >= 0 (probability >= 50%)\n  const isReliable = logitScore >= 0;\n  const classification = isReliable ? \"Likely Reliable\" : \"Potentially Misleading\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Text Metrics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metrics-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Text Structure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Word Count:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 37\n                }, this), \" \", textMetrics.wordCount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Unique Words:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, this), \" \", textMetrics.uniqueWordCount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Lexical Diversity:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 37\n                }, this), \" \", (textMetrics.uniqueWordCount / textMetrics.wordCount).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Sentence Count:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 37\n                }, this), \" \", textMetrics.sentenceCount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Avg. Sentence Length:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 37\n                }, this), \" \", textMetrics.avgSentenceLength, \" words\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Information Theory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Shannon Entropy:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 37\n                }, this), \" \", entropyScore]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"KL Divergence:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 37\n                }, this), \" \", klDivergence]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"metric-explanation\",\n              children: \"Shannon entropy measures the information content of the text. Higher values indicate more diverse vocabulary. KL divergence measures how the word distribution differs from typical reliable sources.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"classification-calculation\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Classification Calculation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Our logistic regression model uses the following formula to determine the probability of misinformation:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formula\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"P(misleading) = 1/(1 + e\", /*#__PURE__*/_jsxDEV(\"sup\", {\n                children: \"-z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 59\n              }, this), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Where z = 1.22 + (0.80 \\xD7 Entropy) + (-1.85 \\xD7 KL Divergence) + (-1.32 \\xD7 Overused Words/10) + (-3.03 \\xD7 Suspicious Words) + (2.89 \\xD7 Sentence Length Score)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calculation-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"For this article:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Entropy:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 37\n                }, this), \" \", entropyScore, \" \\xD7 0.80 = \", (entropyScore * weights.entropy).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"KL Divergence:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 37\n                }, this), \" \", klDivergence, \" \\xD7 -1.85 = \", (klDivergence * weights.klDivergence).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Overused Words:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 37\n                }, this), \" \", overusedWordsCount, \"/10 \\xD7 -1.32 = \", (overusedWordsCount / 10 * weights.overusedWords).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Suspicious Words:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 37\n                }, this), \" \", suspiciousWordsCount, \" \\xD7 -3.03 = \", (suspiciousWordsCount * weights.suspiciousWords).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Sentence Length Score:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, this), \" \", sentenceLengthScore.toFixed(2), \" \\xD7 2.89 = \", (sentenceLengthScore * weights.sentenceLength).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"z = \", logitScore.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Probability = \", probabilityPercentage, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Classification: \", results.classification]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"For more detailed analysis and interactive visualizations, please refer to the Analysis Summary tab.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_c = SummaryModal;\nexport default SummaryModal;\nvar _c;\n$RefreshReg$(_c, \"SummaryModal\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SummaryModal","isOpen","onClose","results","_results$problematicE","_results$problematicE2","_results$problematicE3","_results$problematicE4","textMetrics","entropyScore","klDivergence","overusedWordsCount","problematicElements","overusedWords","length","suspiciousWordsCount","suspiciousWords","avgSentenceLength","sentenceLengthScore","Math","abs","intercept","weights","entropy","sentenceLength","logitScore","reliabilityProbability","exp","probabilityPercentage","toFixed","absLogit","confidence","min","confidencePercentage","isReliable","classification","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","wordCount","uniqueWordCount","sentenceCount","_c","$RefreshReg$"],"sources":["/Users/ehliang/Desktop/Projects/misinfaux/misinfaux/frontend/src/components/SummaryModal.js"],"sourcesContent":["import React from 'react';\n\nconst SummaryModal = ({ isOpen, onClose, results }) => {\n    if (!isOpen || !results) return null;\n    \n    const { textMetrics, entropyScore, klDivergence } = results;\n    const overusedWordsCount = results.problematicElements?.overusedWords?.length || 0;\n    const suspiciousWordsCount = results.problematicElements?.suspiciousWords?.length || 0;\n    \n    // Calculate sentence length score as in the model\n    const avgSentenceLength = textMetrics.avgSentenceLength;\n    const sentenceLengthScore = Math.abs(avgSentenceLength - 17.5) / 10;\n    \n    // Calculate the logistic regression formula result\n    // For P(misleading) = 1/(1 + e^-(intercept + β₁*x₁ + β₂*x₂ + ... + βₙxₙ))\n    const intercept = 1.217970;\n    const weights = {\n        entropy: 0.800971,        // Changed from -1.0\n        klDivergence: -1.847155,  // Changed from 2.0\n        overusedWords: -1.318058, // Changed from 3.0\n        suspiciousWords: -3.026311, // Changed from 1.5\n        sentenceLength: 2.889868   // Changed from -0.5\n    };\n    \n    const logitScore = intercept + \n    (weights.entropy * entropyScore) + \n    (weights.klDivergence * klDivergence) + \n    (weights.overusedWords * overusedWordsCount / 10) + \n    (weights.suspiciousWords * suspiciousWordsCount) + \n    (weights.sentenceLength * sentenceLengthScore);\n\n    // Calculate probability: P = 1/(1 + e^-z)\n    const reliabilityProbability = 1 / (1 + Math.exp(-logitScore));\n    const probabilityPercentage = (reliabilityProbability * 100).toFixed(1);\n    \n    // Calculate confidence based on absolute value of z-score\n    const absLogit = Math.abs(logitScore);\n    const confidence = Math.min(0.99, 0.5 + 0.1 * absLogit);\n    const confidencePercentage = (confidence * 100).toFixed(1);\n    \n    // Determine classification: reliable when z >= 0 (probability >= 50%)\n    const isReliable = logitScore >= 0;\n    const classification = isReliable ? \"Likely Reliable\" : \"Potentially Misleading\";\n\n    \n    return (\n        <div className=\"modal-overlay\">\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h2>Text Metrics</h2>\n                    <button className=\"close-btn\" onClick={onClose}>×</button>\n                </div>\n                \n                <div className=\"modal-body\">\n                    <div className=\"metrics-summary\">\n                        <div className=\"metric-item\">\n                            <h3>Text Structure</h3>\n                            <ul>\n                                <li><strong>Word Count:</strong> {textMetrics.wordCount}</li>\n                                <li><strong>Unique Words:</strong> {textMetrics.uniqueWordCount}</li>\n                                <li><strong>Lexical Diversity:</strong> {(textMetrics.uniqueWordCount / textMetrics.wordCount).toFixed(2)}</li>\n                                <li><strong>Sentence Count:</strong> {textMetrics.sentenceCount}</li>\n                                <li><strong>Avg. Sentence Length:</strong> {textMetrics.avgSentenceLength} words</li>\n                            </ul>\n                        </div>\n                        \n                        <div className=\"metric-item\">\n                            <h3>Information Theory</h3>\n                            <ul>\n                                <li><strong>Shannon Entropy:</strong> {entropyScore}</li>\n                                <li><strong>KL Divergence:</strong> {klDivergence}</li>\n                            </ul>\n                            <p className=\"metric-explanation\">\n                                Shannon entropy measures the information content of the text. Higher values indicate more diverse vocabulary.\n                                KL divergence measures how the word distribution differs from typical reliable sources.\n                            </p>\n                        </div>\n                    </div>\n                    \n                    <div className=\"classification-calculation\">\n                        <h3>Classification Calculation</h3>\n                        <p>Our logistic regression model uses the following formula to determine the probability of misinformation:</p>\n                        <div className=\"formula\">\n                            <span>P(misleading) = 1/(1 + e<sup>-z</sup>)</span>\n                        </div>\n                        <p>Where z = 1.22 + (0.80 × Entropy) + (-1.85 × KL Divergence) + (-1.32 × Overused Words/10) + (-3.03 × Suspicious Words) + (2.89 × Sentence Length Score)</p>          \n\n                        <div className=\"calculation-details\">\n                            <p>For this article:</p>\n                            <ul>\n                                <li><strong>Entropy:</strong> {entropyScore} × 0.80 = {(entropyScore * weights.entropy).toFixed(2)}</li>\n                                <li><strong>KL Divergence:</strong> {klDivergence} × -1.85 = {(klDivergence * weights.klDivergence).toFixed(2)}</li>\n                                <li><strong>Overused Words:</strong> {overusedWordsCount}/10 × -1.32 = {(overusedWordsCount / 10 * weights.overusedWords).toFixed(2)}</li>\n                                <li><strong>Suspicious Words:</strong> {suspiciousWordsCount} × -3.03 = {(suspiciousWordsCount * weights.suspiciousWords).toFixed(2)}</li>\n                                <li><strong>Sentence Length Score:</strong> {sentenceLengthScore.toFixed(2)} × 2.89 = {(sentenceLengthScore * weights.sentenceLength).toFixed(2)}</li>\n                            </ul>\n                            <p><strong>z = {logitScore.toFixed(2)}</strong></p>\n                            <p><strong>Probability = {probabilityPercentage}%</strong></p>\n                            <p><strong>Classification: {results.classification}</strong></p>\n                        </div>\n                    </div>\n                    \n                    <div className=\"modal-footer\">\n                        <p>For more detailed analysis and interactive visualizations, please refer to the Analysis Summary tab.</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SummaryModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}