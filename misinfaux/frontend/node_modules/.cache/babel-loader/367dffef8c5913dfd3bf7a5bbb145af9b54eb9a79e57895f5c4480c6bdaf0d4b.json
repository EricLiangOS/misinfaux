{"ast":null,"code":"import React,{useState}from'react';import{Bar,Line}from'react-chartjs-2';import TextDisplay from'./TextDisplay';import SummaryModal from'./SummaryModal';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ResultsDisplay=_ref=>{let{results}=_ref;const[showModal,setShowModal]=useState(false);const[activeTab,setActiveTab]=useState('summary');// Bootstrap state\nconst[bootstrapSamples,setBootstrapSamples]=useState([]);const[bootstrapWordFreqs,setBootstrapWordFreqs]=useState(null);const[entropyHistory,setEntropyHistory]=useState([]);const[klHistory,setKLHistory]=useState([]);const[sentLengthHistory,setSentLengthHistory]=useState([]);const[overusedWordsHistory,setOverusedWordsHistory]=useState([]);const[isLoading,setIsLoading]=useState(false);if(!results){return/*#__PURE__*/_jsxs(\"div\",{className:\"results-display empty\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Analysis Results\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No results available. Please perform an analysis.\"})]});}const calculateClassification=()=>{var _problematicElements$,_problematicElements$2;const{entropyScore,klDivergence,textMetrics,problematicElements}=results;const overusedWordsCount=(problematicElements===null||problematicElements===void 0?void 0:(_problematicElements$=problematicElements.overusedWords)===null||_problematicElements$===void 0?void 0:_problematicElements$.length)||0;const suspiciousWordsCount=(problematicElements===null||problematicElements===void 0?void 0:(_problematicElements$2=problematicElements.suspiciousWords)===null||_problematicElements$2===void 0?void 0:_problematicElements$2.length)||0;// Calculate sentence length score as in the model\nconst avgSentenceLength=textMetrics.avgSentenceLength;const sentenceLengthScore=Math.abs(avgSentenceLength-17.5)/10;// Use the same weights as in SummaryModal\nconst intercept=1.217970;const weights={entropy:0.600971,klDivergence:-1.847155,overusedWords:-1.318058,suspiciousWords:-1.026311,sentenceLength:-2.889868};// Calculate logit score\nconst logitScore=intercept+weights.entropy*entropyScore+weights.klDivergence*klDivergence+weights.overusedWords*overusedWordsCount/10+weights.suspiciousWords*suspiciousWordsCount+weights.sentenceLength*sentenceLengthScore;// Calculate reliability probability\nconst reliabilityProbability=1/(1+Math.exp(-logitScore));// Calculate confidence based on absolute value of z-score\nconst absLogit=Math.abs(logitScore);const confidence=Math.min(0.99,0.5+0.1*absLogit)*100;// Determine classification: reliable when z >= 0 (probability >= 50%)\nconst isReliable=logitScore>=0;const classification=isReliable?\"Likely Reliable\":\"Potentially Misleading\";return{classification,confidence,reliabilityProbability:reliabilityProbability*100};};// Get the recalculated classification results\nconst calculatedResults=calculateClassification();// Determine confidence level classes based on recalculated confidence\nconst getConfidenceClass=score=>{if(score>80)return'high-confidence';if(score>60)return'medium-confidence';return'low-confidence';};// Use the word frequencies from the analysis or fallback to empty arrays\nconst wordFrequencies=results.wordFrequencies||{words:[],counts:[]};const referenceFrequencies=results.referenceFrequencies||{words:[],counts:[]};// Prepare word frequency chart data\nconst wordFreqChartData={labels:wordFrequencies.words,datasets:[{label:'Article Word Frequencies (%)',data:wordFrequencies.counts,backgroundColor:'rgba(75, 192, 192, 0.6)',borderColor:'rgba(75, 192, 192, 1)',borderWidth:1},{label:'Reference Word Frequencies (%)',data:referenceFrequencies.counts.slice(0,wordFrequencies.words.length),backgroundColor:'rgba(54, 162, 235, 0.6)',borderColor:'rgba(54, 162, 235, 1)',borderWidth:1}]};// Create histogram data for entropy scores\nconst entropyHistogram=bootstrapSamples.length>0?{labels:generateHistogramLabels(entropyHistory,10),datasets:[{label:'Entropy Score Distribution',data:calculateHistogramData(entropyHistory,10).counts,backgroundColor:'rgba(75, 192, 192, 0.6)',borderColor:'rgba(75, 192, 192, 1)',borderWidth:1}]}:null;// Create histogram data for KL divergence\nconst klHistogram=bootstrapSamples.length>0?{labels:generateHistogramLabels(klHistory,10),datasets:[{label:'KL Divergence Distribution',data:calculateHistogramData(klHistory,10).counts,backgroundColor:'rgba(255, 99, 132, 0.6)',borderColor:'rgba(255, 99, 132, 1)',borderWidth:1}]}:null;// Create histogram data for sentence length\nconst sentLengthHistogram=bootstrapSamples.length>0?{labels:generateHistogramLabels(sentLengthHistory,10),datasets:[{label:'Avg. Sentence Length Distribution',data:calculateHistogramData(sentLengthHistory,10).counts,backgroundColor:'rgba(255, 159, 64, 0.6)',borderColor:'rgba(255, 159, 64, 1)',borderWidth:1}]}:null;// Create histogram data for overused words count\nconst overusedWordsHistogram=bootstrapSamples.length>0?{labels:generateHistogramLabels(overusedWordsHistory,10),datasets:[{label:'Overused Words Count Distribution',data:calculateHistogramData(overusedWordsHistory,10).counts,backgroundColor:'rgba(153, 102, 255, 0.6)',borderColor:'rgba(153, 102, 255, 1)',borderWidth:1}]}:null;// Prepare bootstrap word frequency chart data if available\nconst bootstrapWordFreqChartData=bootstrapWordFreqs?{labels:bootstrapWordFreqs.words,datasets:[{label:'Bootstrap Sample Word Frequencies (%)',data:bootstrapWordFreqs.counts,backgroundColor:'rgba(255, 99, 132, 0.6)',borderColor:'rgba(255, 99, 132, 1)',borderWidth:1}]}:null;// Function to calculate histogram buckets\nfunction calculateHistogramData(data,buckets){if(!data||data.length===0)return{counts:Array(buckets).fill(0),edges:[]};const min=Math.min(...data);const max=Math.max(...data);const range=max-min;const bucketSize=range/buckets;// Create buckets array and edges array\nconst histogram=Array(buckets).fill(0);const edges=Array(buckets+1).fill(0).map((_,i)=>min+i*bucketSize);// Fill buckets\ndata.forEach(value=>{const bucketIndex=Math.min(Math.floor((value-min)/bucketSize),buckets-1);histogram[bucketIndex]++;});return{counts:histogram,edges:edges};}// Function to generate labels with actual numeric values\nfunction generateHistogramLabels(data,buckets){if(!data||data.length===0)return Array(buckets).fill('');const min=Math.min(...data);const max=Math.max(...data);const range=max-min;const bucketSize=range/buckets;return Array(buckets).fill(0).map((_,i)=>{const lowerBound=min+i*bucketSize;const upperBound=min+(i+1)*bucketSize;return`${lowerBound.toFixed(2)} - ${upperBound.toFixed(2)}`;});}const runBootstrapSimulation=async()=>{setIsLoading(true);try{const baseUrl='http://localhost:5000';const response=await axios.post(`${baseUrl}/api/bootstrap`,{text:results.originalText},{headers:{'Content-Type':'application/json','Accept':'application/json'}});const newSample=response.data;// Update state with new bootstrap sample data\nsetBootstrapSamples([...bootstrapSamples,newSample]);setBootstrapWordFreqs(newSample.wordFrequencies);setEntropyHistory([...entropyHistory,newSample.entropyScore]);setKLHistory([...klHistory,newSample.klDivergence]);setSentLengthHistory([...sentLengthHistory,newSample.avgSentenceLength]);setOverusedWordsHistory([...overusedWordsHistory,newSample.overusedWordCount]);}catch(error){console.error('Error running bootstrap simulation:',error);}finally{setIsLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"results-display\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Analysis Results\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-options\",children:[/*#__PURE__*/_jsx(\"button\",{className:activeTab==='summary'?'active':'',onClick:()=>setActiveTab('summary'),children:\"Analysis Summary\"}),/*#__PURE__*/_jsx(\"button\",{className:activeTab==='content'?'active':'',onClick:()=>setActiveTab('content'),children:\"Article Content\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:`classification-result ${calculatedResults.classification==='Likely Reliable'?'reliable':'suspicious'}`,children:[/*#__PURE__*/_jsx(\"h3\",{children:calculatedResults.classification}),/*#__PURE__*/_jsxs(\"p\",{className:getConfidenceClass(calculatedResults.confidence),children:[\"Confidence: \",calculatedResults.confidence.toFixed(1),\"%\",/*#__PURE__*/_jsx(\"span\",{className:\"confidence-interval\",children:\"(Based on statistical analysis)\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"view-metrics-btn\",onClick:()=>setShowModal(true),children:\"View Text Metrics\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[activeTab==='summary'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"explanation\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Analysis Explanation\"}),/*#__PURE__*/_jsx(\"p\",{children:results.details})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metrics\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Shannon Entropy\"}),/*#__PURE__*/_jsx(\"div\",{className:\"score-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"score-fill\",style:{width:`${Math.min(results.entropyScore*20,100)}%`}})}),/*#__PURE__*/_jsx(\"p\",{children:results.entropyScore}),/*#__PURE__*/_jsx(\"small\",{children:\"Higher value indicates more complex language\"}),results.bootstrapStats&&/*#__PURE__*/_jsx(\"div\",{className:\"bootstrap-stats\",children:/*#__PURE__*/_jsxs(\"small\",{children:[\"Mean: \",results.bootstrapStats.entropyMean,\" \\xB1 \",results.bootstrapStats.entropyStdErr,\" (SE)\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"KL Divergence\"}),/*#__PURE__*/_jsx(\"div\",{className:\"score-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"score-fill\",style:{width:`${Math.min(results.klDivergence*100,100)}%`}})}),/*#__PURE__*/_jsx(\"p\",{children:results.klDivergence}),/*#__PURE__*/_jsx(\"small\",{children:\"Lower value indicates closer match to reliable sources\"}),results.bootstrapStats&&/*#__PURE__*/_jsx(\"div\",{className:\"bootstrap-stats\",children:/*#__PURE__*/_jsxs(\"small\",{children:[\"Mean: \",results.bootstrapStats.klMean,\" \\xB1 \",results.bootstrapStats.klStdErr,\" (SE)\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Average Sentence Length\"}),/*#__PURE__*/_jsx(\"div\",{className:\"score-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"score-fill\",style:{width:`${Math.min(results.textMetrics.avgSentenceLength*5,100)}%`}})}),/*#__PURE__*/_jsx(\"p\",{children:results.textMetrics.avgSentenceLength}),/*#__PURE__*/_jsx(\"small\",{children:\"Words per sentence (15-20 is typical for articles)\"}),results.bootstrapStats&&/*#__PURE__*/_jsx(\"div\",{className:\"bootstrap-stats\",children:/*#__PURE__*/_jsxs(\"small\",{children:[\"Mean: \",results.bootstrapStats.avgSentLengthMean,\" \\xB1 \",results.bootstrapStats.avgSentLengthStdErr,\" (SE)\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Overused Words\"}),/*#__PURE__*/_jsx(\"div\",{className:\"score-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"score-fill\",style:{width:`${Math.min(results.problematicElements.overusedWords.length*10,100)}%`}})}),/*#__PURE__*/_jsx(\"p\",{children:results.problematicElements.overusedWords.length}),/*#__PURE__*/_jsx(\"small\",{children:\"Words that appear much more frequently than expected\"}),results.bootstrapStats&&/*#__PURE__*/_jsx(\"div\",{className:\"bootstrap-stats\",children:/*#__PURE__*/_jsxs(\"small\",{children:[\"Mean: \",results.bootstrapStats.overusedWordsMean,\" \\xB1 \",results.bootstrapStats.overusedWordsStdErr,\" (SE)\"]})})]})]}),/*#__PURE__*/_jsx(\"h3\",{className:\"chart-section-header\",children:\"Word Frequency Analysis\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"word-freq-chart\",children:/*#__PURE__*/_jsx(Bar,{data:wordFreqChartData,options:{responsive:true,maintainAspectRatio:false,plugins:{title:{display:true,text:'Word Frequencies: Article vs. Reference'},legend:{position:'top'}},scales:{y:{title:{display:true,text:'Frequency (%)'},beginAtZero:true}}}})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bootstrap-section\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"chart-section-header\",children:\"Bootstrap Analysis\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Bootstrap resampling allows us to estimate the variability of our metrics by randomly resampling from the original text. Click the button below to generate a bootstrap sample.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"bootstrap-btn\",onClick:runBootstrapSimulation,disabled:isLoading,children:isLoading?'Running Simulation...':'Run Bootstrap Simulation'}),/*#__PURE__*/_jsx(\"div\",{className:\"bootstrap-results\",children:bootstrapSamples.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Bootstrap Samples: \",bootstrapSamples.length]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Latest Bootstrap Sample Word Frequencies\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bootstrap-word-freq\",children:bootstrapWordFreqChartData&&/*#__PURE__*/_jsx(Bar,{data:bootstrapWordFreqChartData,options:{responsive:true,maintainAspectRatio:false,plugins:{legend:{display:true,position:'top'}},scales:{y:{beginAtZero:true,title:{display:true,text:'Frequency (%)'}}}}})})]}),/*#__PURE__*/_jsx(\"h5\",{className:\"chart-section-header\",children:\"Metric Distributions\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bootstrap-charts\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Entropy Score Distribution\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bootstrap-chart\",children:/*#__PURE__*/_jsx(Bar,{data:entropyHistogram,options:{responsive:true,maintainAspectRatio:false,plugins:{legend:{display:true,position:'top'}},scales:{y:{beginAtZero:true,title:{display:true,text:'Frequency'}}}}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"KL Divergence Distribution\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bootstrap-chart\",children:/*#__PURE__*/_jsx(Bar,{data:klHistogram,options:{responsive:true,maintainAspectRatio:false,plugins:{legend:{display:true,position:'top'}},scales:{y:{beginAtZero:true,title:{display:true,text:'Frequency'}}}}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Average Sentence Length Distribution\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bootstrap-chart\",children:/*#__PURE__*/_jsx(Bar,{data:sentLengthHistogram,options:{responsive:true,maintainAspectRatio:false,plugins:{legend:{display:true,position:'top'}},scales:{y:{beginAtZero:true,title:{display:true,text:'Frequency'}}}}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Overused Words Count Distribution\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bootstrap-chart\",children:/*#__PURE__*/_jsx(Bar,{data:overusedWordsHistogram,options:{responsive:true,maintainAspectRatio:false,plugins:{legend:{display:true,position:'top'}},scales:{y:{beginAtZero:true,title:{display:true,text:'Frequency'}}}}})})]})]})]})})]})]}),activeTab==='content'&&results.originalText&&/*#__PURE__*/_jsx(TextDisplay,{text:results.originalText,problematicElements:results.problematicElements})]}),/*#__PURE__*/_jsx(SummaryModal,{isOpen:showModal,onClose:()=>setShowModal(false),results:results})]});};export default ResultsDisplay;","map":{"version":3,"names":["React","useState","Bar","Line","TextDisplay","SummaryModal","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ResultsDisplay","_ref","results","showModal","setShowModal","activeTab","setActiveTab","bootstrapSamples","setBootstrapSamples","bootstrapWordFreqs","setBootstrapWordFreqs","entropyHistory","setEntropyHistory","klHistory","setKLHistory","sentLengthHistory","setSentLengthHistory","overusedWordsHistory","setOverusedWordsHistory","isLoading","setIsLoading","className","children","calculateClassification","_problematicElements$","_problematicElements$2","entropyScore","klDivergence","textMetrics","problematicElements","overusedWordsCount","overusedWords","length","suspiciousWordsCount","suspiciousWords","avgSentenceLength","sentenceLengthScore","Math","abs","intercept","weights","entropy","sentenceLength","logitScore","reliabilityProbability","exp","absLogit","confidence","min","isReliable","classification","calculatedResults","getConfidenceClass","score","wordFrequencies","words","counts","referenceFrequencies","wordFreqChartData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","slice","entropyHistogram","generateHistogramLabels","calculateHistogramData","klHistogram","sentLengthHistogram","overusedWordsHistogram","bootstrapWordFreqChartData","buckets","Array","fill","edges","max","range","bucketSize","histogram","map","_","i","forEach","value","bucketIndex","floor","lowerBound","upperBound","toFixed","runBootstrapSimulation","baseUrl","response","post","text","originalText","headers","newSample","overusedWordCount","error","console","onClick","details","style","width","bootstrapStats","entropyMean","entropyStdErr","klMean","klStdErr","avgSentLengthMean","avgSentLengthStdErr","overusedWordsMean","overusedWordsStdErr","options","responsive","maintainAspectRatio","plugins","title","display","legend","position","scales","y","beginAtZero","disabled","isOpen","onClose"],"sources":["/Users/ehliang/Desktop/Projects/misinfaux/misinfaux/frontend/src/components/ResultsDisplay.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport TextDisplay from './TextDisplay';\nimport SummaryModal from './SummaryModal';\nimport axios from 'axios';\n\nconst ResultsDisplay = ({ results }) => {\n    const [showModal, setShowModal] = useState(false);\n    const [activeTab, setActiveTab] = useState('summary');\n    \n    // Bootstrap state\n    const [bootstrapSamples, setBootstrapSamples] = useState([]);\n    const [bootstrapWordFreqs, setBootstrapWordFreqs] = useState(null);\n    const [entropyHistory, setEntropyHistory] = useState([]);\n    const [klHistory, setKLHistory] = useState([]);\n    const [sentLengthHistory, setSentLengthHistory] = useState([]);\n    const [overusedWordsHistory, setOverusedWordsHistory] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    \n    if (!results) {\n        return (\n            <div className=\"results-display empty\">\n                <h2>Analysis Results</h2>\n                <p>No results available. Please perform an analysis.</p>\n            </div>\n        );\n    }\n\n    const calculateClassification = () => {\n        const { entropyScore, klDivergence, textMetrics, problematicElements } = results;\n        const overusedWordsCount = problematicElements?.overusedWords?.length || 0;\n        const suspiciousWordsCount = problematicElements?.suspiciousWords?.length || 0;\n        \n        // Calculate sentence length score as in the model\n        const avgSentenceLength = textMetrics.avgSentenceLength;\n        const sentenceLengthScore = Math.abs(avgSentenceLength - 17.5) / 10;\n        \n        // Use the same weights as in SummaryModal\n        const intercept = 1.217970;\n        const weights = {\n            entropy: 0.600971,\n            klDivergence: -1.847155,\n            overusedWords: -1.318058,\n            suspiciousWords: -1.026311,\n            sentenceLength: -2.889868\n        };\n        \n        // Calculate logit score\n        const logitScore = intercept + \n            (weights.entropy * entropyScore) + \n            (weights.klDivergence * klDivergence) + \n            (weights.overusedWords * overusedWordsCount / 10) + \n            (weights.suspiciousWords * suspiciousWordsCount) + \n            (weights.sentenceLength * sentenceLengthScore);\n\n        // Calculate reliability probability\n        const reliabilityProbability = 1 / (1 + Math.exp(-logitScore));\n        \n        // Calculate confidence based on absolute value of z-score\n        const absLogit = Math.abs(logitScore);\n        const confidence = Math.min(0.99, 0.5 + 0.1 * absLogit) * 100;\n        \n        // Determine classification: reliable when z >= 0 (probability >= 50%)\n        const isReliable = logitScore >= 0;\n        const classification = isReliable ? \"Likely Reliable\" : \"Potentially Misleading\";\n        \n        return {\n            classification,\n            confidence,\n            reliabilityProbability: reliabilityProbability * 100\n        };\n    };\n\n    // Get the recalculated classification results\n    const calculatedResults = calculateClassification();\n    \n    // Determine confidence level classes based on recalculated confidence\n    const getConfidenceClass = (score) => {\n        if (score > 80) return 'high-confidence';\n        if (score > 60) return 'medium-confidence';\n        return 'low-confidence';\n    };\n    \n    // Use the word frequencies from the analysis or fallback to empty arrays\n    const wordFrequencies = results.wordFrequencies || { words: [], counts: [] };\n    const referenceFrequencies = results.referenceFrequencies || { words: [], counts: [] };\n    \n    // Prepare word frequency chart data\n    const wordFreqChartData = {\n        labels: wordFrequencies.words,\n        datasets: [\n            {\n                label: 'Article Word Frequencies (%)',\n                data: wordFrequencies.counts,\n                backgroundColor: 'rgba(75, 192, 192, 0.6)',\n                borderColor: 'rgba(75, 192, 192, 1)',\n                borderWidth: 1\n            },\n            {\n                label: 'Reference Word Frequencies (%)',\n                data: referenceFrequencies.counts.slice(0, wordFrequencies.words.length),\n                backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                borderColor: 'rgba(54, 162, 235, 1)',\n                borderWidth: 1\n            }\n        ]\n    };\n    \n    // Create histogram data for entropy scores\n    const entropyHistogram = bootstrapSamples.length > 0 ? {\n        labels: generateHistogramLabels(entropyHistory, 10),\n        datasets: [{\n            label: 'Entropy Score Distribution',\n            data: calculateHistogramData(entropyHistory, 10).counts,\n            backgroundColor: 'rgba(75, 192, 192, 0.6)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n        }]\n    } : null;\n    \n    // Create histogram data for KL divergence\n    const klHistogram = bootstrapSamples.length > 0 ? {\n        labels: generateHistogramLabels(klHistory, 10),\n        datasets: [{\n            label: 'KL Divergence Distribution',\n            data: calculateHistogramData(klHistory, 10).counts,\n            backgroundColor: 'rgba(255, 99, 132, 0.6)',\n            borderColor: 'rgba(255, 99, 132, 1)',\n            borderWidth: 1\n        }]\n    } : null;\n    \n    // Create histogram data for sentence length\n    const sentLengthHistogram = bootstrapSamples.length > 0 ? {\n        labels: generateHistogramLabels(sentLengthHistory, 10),\n        datasets: [{\n            label: 'Avg. Sentence Length Distribution',\n            data: calculateHistogramData(sentLengthHistory, 10).counts,\n            backgroundColor: 'rgba(255, 159, 64, 0.6)',\n            borderColor: 'rgba(255, 159, 64, 1)',\n            borderWidth: 1\n        }]\n    } : null;\n    \n    // Create histogram data for overused words count\n    const overusedWordsHistogram = bootstrapSamples.length > 0 ? {\n        labels: generateHistogramLabels(overusedWordsHistory, 10),\n        datasets: [{\n            label: 'Overused Words Count Distribution',\n            data: calculateHistogramData(overusedWordsHistory, 10).counts,\n            backgroundColor: 'rgba(153, 102, 255, 0.6)',\n            borderColor: 'rgba(153, 102, 255, 1)',\n            borderWidth: 1\n        }]\n    } : null;\n    \n    // Prepare bootstrap word frequency chart data if available\n    const bootstrapWordFreqChartData = bootstrapWordFreqs ? {\n        labels: bootstrapWordFreqs.words,\n        datasets: [\n            {\n                label: 'Bootstrap Sample Word Frequencies (%)',\n                data: bootstrapWordFreqs.counts,\n                backgroundColor: 'rgba(255, 99, 132, 0.6)',\n                borderColor: 'rgba(255, 99, 132, 1)',\n                borderWidth: 1\n            }\n        ]\n    } : null;\n    \n    // Function to calculate histogram buckets\n    function calculateHistogramData(data, buckets) {\n        if (!data || data.length === 0) return { counts: Array(buckets).fill(0), edges: [] };\n        \n        const min = Math.min(...data);\n        const max = Math.max(...data);\n        const range = max - min;\n        const bucketSize = range / buckets;\n        \n        // Create buckets array and edges array\n        const histogram = Array(buckets).fill(0);\n        const edges = Array(buckets + 1).fill(0).map((_, i) => min + i * bucketSize);\n        \n        // Fill buckets\n        data.forEach(value => {\n            const bucketIndex = Math.min(\n                Math.floor((value - min) / bucketSize),\n                buckets - 1\n            );\n            histogram[bucketIndex]++;\n        });\n        \n        return { counts: histogram, edges: edges };\n    }\n    \n    // Function to generate labels with actual numeric values\n    function generateHistogramLabels(data, buckets) {\n        if (!data || data.length === 0) return Array(buckets).fill('');\n        \n        const min = Math.min(...data);\n        const max = Math.max(...data);\n        const range = max - min;\n        const bucketSize = range / buckets;\n        \n        return Array(buckets).fill(0).map((_, i) => {\n            const lowerBound = min + i * bucketSize;\n            const upperBound = min + (i + 1) * bucketSize;\n            return `${lowerBound.toFixed(2)} - ${upperBound.toFixed(2)}`;\n        });\n    }\n\n    const runBootstrapSimulation = async () => {\n        setIsLoading(true);\n        try {\n            const baseUrl = 'http://localhost:5000';\n            const response = await axios.post(`${baseUrl}/api/bootstrap`, {\n                text: results.originalText\n            }, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                }\n            });\n            \n            const newSample = response.data;\n            \n            // Update state with new bootstrap sample data\n            setBootstrapSamples([...bootstrapSamples, newSample]);\n            setBootstrapWordFreqs(newSample.wordFrequencies);\n            setEntropyHistory([...entropyHistory, newSample.entropyScore]);\n            setKLHistory([...klHistory, newSample.klDivergence]);\n            setSentLengthHistory([...sentLengthHistory, newSample.avgSentenceLength]);\n            setOverusedWordsHistory([...overusedWordsHistory, newSample.overusedWordCount]);\n        } catch (error) {\n            console.error('Error running bootstrap simulation:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"results-display\">\n            <h2>Analysis Results</h2>\n                        \n            {/* Tab Navigation */}\n            <div className=\"input-options\">\n                <button \n                    className={activeTab === 'summary' ? 'active' : ''}\n                    onClick={() => setActiveTab('summary')}\n                >\n                    Analysis Summary\n                </button>\n                <button \n                    className={activeTab === 'content' ? 'active' : ''}\n                    onClick={() => setActiveTab('content')}\n                >\n                    Article Content\n                </button>\n            </div>\n            \n            <div className={`classification-result ${calculatedResults.classification === 'Likely Reliable' ? 'reliable' : 'suspicious'}`}>\n                <h3>{calculatedResults.classification}</h3>\n                <p className={getConfidenceClass(calculatedResults.confidence)}>\n                    Confidence: {calculatedResults.confidence.toFixed(1)}%\n                    <span className=\"confidence-interval\">\n                        (Based on statistical analysis)\n                    </span>\n                </p>\n                <button className=\"view-metrics-btn\" onClick={() => setShowModal(true)}>\n                    View Text Metrics\n                </button>\n            </div>\n\n            \n            {/* Tab Content */}\n            <div className=\"tab-content\">\n                {activeTab === 'summary' && (\n                    <>\n                        <div className=\"explanation\">\n                            <h4>Analysis Explanation</h4>\n                            <p>{results.details}</p>\n                        </div>\n\n                        <div className=\"metrics\">\n                            {/* Entropy Metric */}\n                            <div className=\"metric\">\n                                <h4>Shannon Entropy</h4>\n                                <div className=\"score-bar\">\n                                    <div \n                                        className=\"score-fill\"\n                                        style={{width: `${Math.min(results.entropyScore * 20, 100)}%`}}\n                                    ></div>\n                                </div>\n                                <p>{results.entropyScore}</p>\n                                <small>Higher value indicates more complex language</small>\n                                {results.bootstrapStats && (\n                                    <div className=\"bootstrap-stats\">\n                                        <small>Mean: {results.bootstrapStats.entropyMean} ± {results.bootstrapStats.entropyStdErr} (SE)</small>\n                                    </div>\n                                )}\n                            </div>\n\n                            {/* KL Divergence Metric */}\n                            <div className=\"metric\">\n                                <h4>KL Divergence</h4>\n                                <div className=\"score-bar\">\n                                    <div \n                                        className=\"score-fill\"\n                                        style={{width: `${Math.min(results.klDivergence * 100, 100)}%`}}\n                                    ></div>\n                                </div>\n                                <p>{results.klDivergence}</p>\n                                <small>Lower value indicates closer match to reliable sources</small>\n                                {results.bootstrapStats && (\n                                    <div className=\"bootstrap-stats\">\n                                        <small>Mean: {results.bootstrapStats.klMean} ± {results.bootstrapStats.klStdErr} (SE)</small>\n                                    </div>\n                                )}\n                            </div>\n\n                            {/* Average Sentence Length Metric */}\n                            <div className=\"metric\">\n                                <h4>Average Sentence Length</h4>\n                                <div className=\"score-bar\">\n                                    <div \n                                        className=\"score-fill\"\n                                        style={{width: `${Math.min(results.textMetrics.avgSentenceLength * 5, 100)}%`}}\n                                    ></div>\n                                </div>\n                                <p>{results.textMetrics.avgSentenceLength}</p>\n                                <small>Words per sentence (15-20 is typical for articles)</small>\n                                {results.bootstrapStats && (\n                                    <div className=\"bootstrap-stats\">\n                                        <small>Mean: {results.bootstrapStats.avgSentLengthMean} ± {results.bootstrapStats.avgSentLengthStdErr} (SE)</small>\n                                    </div>\n                                )}\n                            </div>\n\n                            {/* Overused Words Metric */}\n                            <div className=\"metric\">\n                                <h4>Overused Words</h4>\n                                <div className=\"score-bar\">\n                                    <div \n                                        className=\"score-fill\"\n                                        style={{width: `${Math.min(results.problematicElements.overusedWords.length * 10, 100)}%`}}\n                                    ></div>\n                                </div>\n                                <p>{results.problematicElements.overusedWords.length}</p>\n                                <small>Words that appear much more frequently than expected</small>\n                                {results.bootstrapStats && (\n                                    <div className=\"bootstrap-stats\">\n                                        <small>Mean: {results.bootstrapStats.overusedWordsMean} ± {results.bootstrapStats.overusedWordsStdErr} (SE)</small>\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                        \n                        {/* Word Frequency Chart */}\n                        <h3 className=\"chart-section-header\">Word Frequency Analysis</h3>\n                        <div className=\"chart-container\">\n                            <div className=\"word-freq-chart\">\n                                <Bar \n                                    data={wordFreqChartData}\n                                    options={{\n                                        responsive: true,\n                                        maintainAspectRatio: false,\n                                        plugins: {\n                                            title: {\n                                                display: true,\n                                                text: 'Word Frequencies: Article vs. Reference'\n                                            },\n                                            legend: {\n                                                position: 'top',\n                                            },\n                                        },\n                                        scales: {\n                                            y: {\n                                                title: {\n                                                    display: true,\n                                                    text: 'Frequency (%)'\n                                                },\n                                                beginAtZero: true\n                                            }\n                                        }\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        \n                        {/* Bootstrap Analysis Section */}\n                        <div className=\"bootstrap-section\">\n                            <h3 className=\"chart-section-header\">Bootstrap Analysis</h3>\n                            <p>\n                                Bootstrap resampling allows us to estimate the variability of our metrics by randomly \n                                resampling from the original text. Click the button below to generate a bootstrap sample.\n                            </p>\n                            \n                            <button \n                                className=\"bootstrap-btn\" \n                                onClick={runBootstrapSimulation}\n                                disabled={isLoading}\n                            >\n                                {isLoading ? 'Running Simulation...' : 'Run Bootstrap Simulation'}\n                            </button>\n                            \n                            <div className=\"bootstrap-results\">\n                                {bootstrapSamples.length > 0 && (\n                                    <>\n                                        <h4>Bootstrap Samples: {bootstrapSamples.length}</h4>\n                                        \n                                        {/* Latest bootstrap word frequencies */}\n                                        <div className=\"chart-container\">\n                                            <h5>Latest Bootstrap Sample Word Frequencies</h5>\n                                            <div className=\"bootstrap-word-freq\">\n                                                {bootstrapWordFreqChartData && (\n                                                    <Bar \n                                                        data={bootstrapWordFreqChartData}\n                                                        options={{\n                                                            responsive: true,\n                                                            maintainAspectRatio: false,\n                                                            plugins: {\n                                                                legend: {\n                                                                    display: true,\n                                                                    position: 'top',\n                                                                }\n                                                            },\n                                                            scales: {\n                                                                y: {\n                                                                    beginAtZero: true,\n                                                                    title: {\n                                                                        display: true,\n                                                                        text: 'Frequency (%)'\n                                                                    }\n                                                                }\n                                                            }\n                                                        }}\n                                                    />\n                                                )}\n                                            </div>\n                                        </div>\n                                        \n                                        {/* Distribution charts with clear separation */}\n                                        <h5 className=\"chart-section-header\">Metric Distributions</h5>\n                                        <div className=\"bootstrap-charts\">\n                                            {/* Entropy Score Distribution */}\n                                            <div className=\"chart-container\">\n                                                <h5>Entropy Score Distribution</h5>\n                                                <div className=\"bootstrap-chart\">\n                                                    <Bar \n                                                        data={entropyHistogram}\n                                                        options={{\n                                                            responsive: true,\n                                                            maintainAspectRatio: false,\n                                                            plugins: {\n                                                                legend: {\n                                                                    display: true,\n                                                                    position: 'top',\n                                                                }\n                                                            },\n                                                            scales: {\n                                                                y: {\n                                                                    beginAtZero: true,\n                                                                    title: {\n                                                                        display: true,\n                                                                        text: 'Frequency'\n                                                                    }\n                                                                }\n                                                            }\n                                                        }}\n                                                    />\n                                                </div>\n                                            </div>\n                                            \n                                            {/* KL Divergence Distribution */}\n                                            <div className=\"chart-container\">\n                                                <h5>KL Divergence Distribution</h5>\n                                                <div className=\"bootstrap-chart\">\n                                                    <Bar \n                                                        data={klHistogram}\n                                                        options={{\n                                                            responsive: true,\n                                                            maintainAspectRatio: false,\n                                                            plugins: {\n                                                                legend: {\n                                                                    display: true,\n                                                                    position: 'top',\n                                                                }\n                                                            },\n                                                            scales: {\n                                                                y: {\n                                                                    beginAtZero: true,\n                                                                    title: {\n                                                                        display: true,\n                                                                        text: 'Frequency'\n                                                                    }\n                                                                }\n                                                            }\n                                                        }}\n                                                    />\n                                                </div>\n                                            </div>\n                                            \n                                            {/* Average Sentence Length Distribution */}\n                                            <div className=\"chart-container\">\n                                                <h5>Average Sentence Length Distribution</h5>\n                                                <div className=\"bootstrap-chart\">\n                                                    <Bar \n                                                        data={sentLengthHistogram}\n                                                        options={{\n                                                            responsive: true,\n                                                            maintainAspectRatio: false,\n                                                            plugins: {\n                                                                legend: {\n                                                                    display: true,\n                                                                    position: 'top',\n                                                                }\n                                                            },\n                                                            scales: {\n                                                                y: {\n                                                                    beginAtZero: true,\n                                                                    title: {\n                                                                        display: true,\n                                                                        text: 'Frequency'\n                                                                    }\n                                                                }\n                                                            }\n                                                        }}\n                                                    />\n                                                </div>\n                                            </div>\n                                            \n                                            {/* Overused Words Count Distribution */}\n                                            <div className=\"chart-container\">\n                                                <h5>Overused Words Count Distribution</h5>\n                                                <div className=\"bootstrap-chart\">\n                                                    <Bar \n                                                        data={overusedWordsHistogram}\n                                                        options={{\n                                                            responsive: true,\n                                                            maintainAspectRatio: false,\n                                                            plugins: {\n                                                                legend: {\n                                                                    display: true,\n                                                                    position: 'top',\n                                                                }\n                                                            },\n                                                            scales: {\n                                                                y: {\n                                                                    beginAtZero: true,\n                                                                    title: {\n                                                                        display: true,\n                                                                        text: 'Frequency'\n                                                                    }\n                                                                }\n                                                            }\n                                                        }}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </>\n                                )}\n                            </div>\n                        </div>\n                    </>\n                )}\n                \n                {activeTab === 'content' && results.originalText && (\n                    <TextDisplay \n                        text={results.originalText} \n                        problematicElements={results.problematicElements}\n                    />\n                )}\n            </div>\n            \n            <SummaryModal \n                isOpen={showModal}\n                onClose={() => setShowModal(false)}\n                results={results}\n            />\n        </div>\n    );\n};\n\nexport default ResultsDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}